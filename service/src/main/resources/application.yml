app:
  ru-data:
    url: ${rudata.url}
    login: ${rudata.login}
    password: ${rudata.password}
    tokenLifetime: PT90S
    serverPort: ${grpc.port}
  schedule:
    enabled: true
    delay: '120000'

grpc:
  port: 8010

info:
  version: 1.0
  description: Proxy RuData

server:
  port: ${spring.application.port:8075}
  servlet:
    context-path:
    session:
      cookie:
        name: JSESSIONIDRUDATAPROXY


management:
  server:
    port: ${server.port}
    servlet:
      context-path: /manage
  endpoint:
    jolokia:
      enabled: false
    liquibase:
      enabled: false
    health:
      show-details: always
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: ['health', 'info', 'env', 'metrics', 'auditevents', 'beans', 'caches', 'configprops', 'flyway', 'httptrace', 'mappings', 'scheduledtasks', 'threaddump', 'heapdump', 'logfile']
  info:
    env:
      enabled: true

encrypt:
  failOnError: false

health:
  config:
    enabled: false

spring:
  jackson:
    mapper:
      auto_detect_creators: true
      auto_detect_setters: true
      auto_detect_getters: true
      auto_detect_is_getters: true
      accept_case_insensitive_properties: true
      accept_case_insensitive_enums: true
      use_static_typing: true
    deserialization:
      fail_on_unknown_properties: false
    parser:
      allow_backslash_escaping_any_character: true
    property-naming-strategy: LOWER_CAMEL_CASE
    locale: ru_RU
    serialization:
      write_dates_as_timestamps: false
  application:
    name: bm-proxy-rudata-server
  data:
    mongodb:
      uri: mongodb://${mongo.user:admin}:${mongo.password:admin}@${mongo.host:localhost}:${mongo.port:27017}/${mongo.database:admin}
  jmx:
    enabled: false
  main:
    banner-mode: 'off'
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration

eureka:
  client:
    enabled: true
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://${discovery.host:localhost}:${discovery.port:8761}/eureka/
    availabilityZones:
      default: defaultZone
  instance:
    hostname: ${spring.application.name}
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 60
    metadata-map:
      instanceId: ${spring.application.name}:${random.value}
      management.context-path: ${server.context-path}${management.server.servlet.context-path}
      grpc:
        port: 8010
    statusPageUrlPath: ${server.servlet.context-path}${management.server.servlet.context-path}/info
    healthCheckUrlPath: ${server.servlet.context-path}${management.server.servlet.context-path}/health
    homePageUrlPath: ${eureka.hostname}/

endpoints:
  bus:
    enabled: true

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %clr(%-5level) %clr(${PID:-}){magenta} %clr([${spring.application.name:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(%X{logtype:-}){magenta} --- %clr([%t]){faint} %clr(%logger{25}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"